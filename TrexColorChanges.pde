//Zach Eckley 5/2/17
float x = 0;
float b = 70;
float s = 104;
void setup()
{
  size(800,800);
  smooth();
}
  void draw()
  {
  background(b,187,214);
  fill(255,255,255);
  noStroke();
  //First Cloud
  ellipse(210,50,75,75);
  ellipse(182,40,80,80);
  ellipse(140,70,100,100);
  ellipse(200,85,95,95);
  ellipse(270,60,115,115);
  //Second Cloud
  ellipse(420,170,100,100);
  ellipse(440,130,80,80);
  ellipse(400,170,140,70);
  ellipse(390,150,90,90);
  //Third Cloud
  ellipse(700,40,70,70);
  ellipse(650,60,110,100);
  ellipse(740,60,120,80);
  ellipse(760,40,80,80);
  ellipse(720,90,90,90);
  
  fill(127,127,127);
  noStroke();
  //First Volcano Smoke
  ellipse(132,383,60,60);
  ellipse(115,350,70,70);
  ellipse(135,325,80,80);
  ellipse(100,295,100,100);
  ellipse(145,305,80,80);
  ellipse(90,270,110,100);
  ellipse(120,290,90,90);
  //Second Volcano Smoke
  ellipse(385,388,80,80);
  ellipse(340,368,50,50);
  ellipse(360,340,90,90);
  ellipse(400,330,50,50);
  ellipse(355,320,80,80);
  ellipse(320,330,60,60);
  fill(185,122,87);
  stroke(8);
  //First Volcano Shape
  beginShape();
  vertex(0,523);
  vertex(101,383);
  vertex(161,383);
  vertex(255,505);
  vertex(158,642);
  vertex(128,633);
  vertex(78,653);
  vertex(36,635);
  vertex(0,664);
  endShape();
  //Second Volcano Shape
  beginShape();
  vertex(141,667);
  vertex(327,388);
  vertex(427,388);
  vertex(623,667);
  vertex(141,667);
  endShape();
  fill(255,127,39);
  //First Volcano Lava
  beginShape();
  vertex(66,428);
  vertex(73,445);
  vertex(87,430);
  vertex(93,448);
  vertex(114,427);
  vertex(119,449);
  vertex(133,428);
  vertex(147,454);
  vertex(159,427);
  vertex(168,444);
  vertex(176,431);
  vertex(187,444);
  vertex(199,429);
  vertex(161,383);
  vertex(101,383);
  vertex(66,428);
  endShape();
  //Second Volcano Lava
  beginShape();
  vertex(276,458);
  vertex(294,492);
  vertex(319,468);
  vertex(328,479);
  vertex(344,460);
  vertex(352,492);
  vertex(371,467);
  vertex(392,496);
  vertex(416,460);
  vertex(445,488);
  vertex(453,472);
  vertex(466,483);
  vertex(480,458);
  vertex(428,388);
  vertex(326,388);
  vertex(276,458);
  endShape();
  //Grass
  fill(34,177,76);
  beginShape();
  vertex(799,688);
  vertex(780,690);
  vertex(730,669);
  vertex(656,679);
  vertex(624,668);
  vertex(141,668);
  vertex(158,642);
  vertex(128,633);
  vertex(78,653);
  vertex(36,635);
  vertex(0,664);
  vertex(0,799);
  vertex(799,799);
  vertex(799,688);
  endShape();
  //T-Rex
  fill(s,150,58);
  beginShape();
  vertex(x+688,198);
  vertex(x+688,128);
  vertex(x+659,99);
  vertex(x+487,99);
  vertex(x+446,140);
  vertex(x+429,224);
  vertex(x+426,240);
  vertex(x+424,251);
  vertex(x+420,269);
  vertex(x+418,281);
  vertex(x+413,305);
  vertex(x+411,314);
  vertex(x+406,342);
  vertex(x+404,353);
  vertex(x+398,382);
  vertex(x+395,395);
  vertex(x+392,411);
  vertex(x+390,430);
  vertex(x+386,449);
  vertex(x+371,482);
  vertex(x+366,489);
  vertex(x+341,515);
  vertex(x+333,521);
  vertex(x+307,534);
  vertex(x+299,537);
  vertex(x+273,542);
  vertex(x+258,542);
  vertex(x+237,540);
  vertex(x+223,536);
  vertex(x+205,528);
  vertex(x+198,524);
  vertex(x+181,513);
  vertex(x+175,507);
  vertex(x+165,496);
  vertex(x+160,490);
  vertex(x+154,481);
  vertex(x+151,475);
  vertex(x+146,466);
  vertex(x+133,411);
  vertex(x+133,411);
  vertex(x+133,573);
  vertex(x+196,652);
  vertex(x+292,661);
  vertex(x+282,754);
  vertex(x+287,776);
  vertex(x+345,771);
  vertex(x+359,777);
  vertex(x+363,766);
  vertex(x+343,751);
  vertex(x+312,757);
  vertex(x+323,663);
  vertex(x+399,654);
  vertex(x+391,751);
  vertex(x+396,776);
  vertex(x+454,771);
  vertex(x+468,777);
  vertex(x+472,766);
  vertex(x+452,751);
  vertex(x+421,757);
  vertex(x+430,653);
  vertex(x+465,620);
  vertex(x+511,549);
  vertex(x+520,454);
  vertex(x+526,345);
  vertex(x+558,369);
  vertex(x+594,339);
  vertex(x+608,347);
  vertex(x+602,336);
  vertex(x+613,342);
  vertex(x+606,332);
  vertex(x+612,332);
  vertex(x+617,337);
  vertex(x+614,327);
  vertex(x+593,322);
  vertex(x+557,350);
  vertex(x+526,316);
  vertex(x+526,279);
  vertex(x+552,267);
  vertex(x+636,267);
  vertex(x+641,262);
  vertex(x+641,251);
  vertex(x+638,249);
  vertex(x+556,249);
  vertex(x+544,237);
  vertex(x+544,211);
  vertex(x+557,198);
  vertex(x+688,198);
  endShape();
  //Teeth
  fill(255,255,255);
  beginShape();
  vertex(x+682,199);
  vertex(x+673,217);
  vertex(x+664,200);
  vertex(x+655,217);
  vertex(x+646,200);
  vertex(x+637,217);
  vertex(x+628,200);
  vertex(x+619,217);
  vertex(x+610,200);
  vertex(x+601,217);
  vertex(x+592,200);
  vertex(x+583,217);
  vertex(x+574,200);
  vertex(x+565,217);
  vertex(x+556,200);
  vertex(x+557,199);
  endShape();
  //Bottom Teeth
  beginShape();
  vertex(x+638,248);
  vertex(x+638,247);
  vertex(x+632,236);
  vertex(x+626,247);
  vertex(x+620,236);
  vertex(x+614,247);
  vertex(x+608,236);
  vertex(x+602,247);
  vertex(x+596,236);
  vertex(x+590,247);
  vertex(x+584,236);
  vertex(x+578,247);
  vertex(x+572,236);
  vertex(x+566,247);
  vertex(x+560,236);
  vertex(x+554,247);
  vertex(x+556,248);
  endShape();
  //Stripes on Back Bottom to Top
  beginShape();
  vertex(x+146,466);
  vertex(x+151,475);
  vertex(x+137,475);
  vertex(x+146,466);
  endShape();
  beginShape();
  vertex(x+154,481);
  vertex(x+141,492);
  vertex(x+160,490);
  vertex(x+154,481);
  endShape();
  beginShape();
  vertex(x+165,496);
  vertex(x+175,507);
  vertex(x+151,515);
  vertex(x+165,496);
  endShape();
  beginShape();
  vertex(x+181,513);
  vertex(x+198,524);
  vertex(x+172,539);
  vertex(x+181,513);
  endShape();
  beginShape();
  vertex(x+205,528);
  vertex(x+201,561);
  vertex(x+223,536);
  vertex(x+205,528);
  endShape();
  beginShape();
  vertex(x+237,540);
  vertex(x+239,578);
  vertex(x+258,542);
  vertex(x+237,540);
  endShape();
  beginShape();
  vertex(x+273,542);
  vertex(x+286,585);
  vertex(x+299,537);
  vertex(x+273,542);
  endShape();
  beginShape();
  vertex(x+307,534);
  vertex(x+334,574);
  vertex(x+333,521);
  vertex(x+307,534);
  endShape();
  beginShape();
  vertex(x+341,515);
  vertex(x+381,554);
  vertex(x+366,488);
  vertex(x+341,515);
  endShape();
  beginShape();
  vertex(x+371,482);
  vertex(x+438,494);
  vertex(x+386,449);
  vertex(x+371,482);
  endShape();
  beginShape();
  vertex(x+390,430);
  vertex(x+447,423);
  vertex(x+395,395);
  vertex(x+392,411);
  vertex(x+390,430);
  endShape();
  beginShape();
  vertex(x+398,382);
  vertex(x+442,376);
  vertex(x+404,353);
  vertex(x+398,382);
  endShape();
  beginShape();
  vertex(x+406,342);
  vertex(x+449,338);
  vertex(x+411,314);
  vertex(x+406,342);
  endShape();
  beginShape();
  vertex(x+413,305);
  vertex(x+453,299);
  vertex(x+418,281);
  vertex(x+413,305);
  endShape();
  beginShape();
  vertex(x+420,269);
  vertex(x+447,266);
  vertex(x+424,251);
  vertex(x+420,269);
  endShape();
  beginShape();
  vertex(x+426,240);
  vertex(x+450,237);
  vertex(x+429,224);
  vertex(x+426,240);
  endShape();
  fill(195,195,195);
  beginShape();
  //Stomach
  fill(175,175,175);
  vertex(x+525,357);
  vertex(x+493,376);
  vertex(x+478,419);
  vertex(x+469,508);
  vertex(x+429,575);
  vertex(x+459,626);
  vertex(x+465,620);
  vertex(x+511,549);
  vertex(x+521,453);
  vertex(x+525,357);
  endShape();
  //Eye
  fill(255,201,14);
  ellipse(x+507,145,45,30);
  fill(255,242,0);
  ellipse(x+507,145,33,28);
  fill(0);
  ellipse(x+507+(((mouseX-(507+x))*10)/width),145+(((mouseY-(200))*10)/height),18,18);
  if(keyPressed&&(key==CODED)){
    if(keyCode==RIGHT){
      x+=5;
    }
    if(keyCode==LEFT){
      x-=5;
    }
    if(keyCode==SHIFT){
      b=185;
    }else{
        b=70;
      
    }
    if(keyCode==CONTROL){
      s = 255;
    }else{
      s=104;
    }
  }  
}